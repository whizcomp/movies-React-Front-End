{"version":3,"sources":["component/http.jsx","component/table.jsx","component/genreService.jsx","component/Input.jsx","component/Form.jsx","component/Dialog.jsx","component/Movie.jsx","component/movieDetails.jsx","component/MyContacts.jsx","component/register.jsx","component/login.jsx","component/Navbar.jsx","component/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","process","headers","common","localStorage","getItem","get","post","put","delete","Tables","state","columns","id","label","this","props","Movies","onDelete","onHandleEpisode","length","Typography","TableContainer","styles","maxHeight","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","TableBody","movie","_id","to","style","textDecoration","name","currentSeason","currentEpisode","numberOfSeasons","numberOfEpisodes","genre","IconButton","onClick","fontSize","Button","size","color","Component","submit","data","http","genreName","changeData","movieId","episode","episodesPerSeason","seasons","genreId","userService","user","email","username","password","loginService","Input","value","onChange","type","errors","TextField","fullWidth","helperText","Form","onSubmit","genres","Select","autoWidth","native","margin","variant","useStyles","makeStyles","theme","container","display","flexWrap","formControl","spacing","minWidth","Dialogs","classes","React","useState","open","setOpen","handleClose","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","className","DialogActions","Movie","schema","Joi","string","min","max","required","number","handleChange","input","currentTarget","setState","doSubmit","a","response","status","console","log","handleSubmit","e","preventDefault","validate","handleGenreSubmit","handleDelete","filter","m","handleEpisode","index","indexOf","result","abortEarly","error","details","item","path","message","Paper","paper","withStyles","padding","Moviedetails","dataToModel","body","history","push","match","params","Grid","root","width","maxWidth","justifyContent","alignItems","icons","MyContacts","media","link","icon","flexDirection","rel","href","target","Register","setItem","window","location","xs","md","lg","form","button","paddingLeft","minHeight","marginTop","Login","sm","Navbar","Box","Fragment","AppBar","position","Toolbar","flex","links","align","MenuItem","flexGrow","flexFlow","alignContent","Logout","removeItem","App","token","jwt","component","render","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.68bbfdde.chunk.js","sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.headers.common[\"x-user-token\"] = localStorage.getItem(\"token\");\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  Typography,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nexport default class Tables extends Component {\n  state = {\n    columns: [\n      { id: 1, label: \"Title\" },\n      { id: 2, label: \"Current Season\" },\n      { id: 3, label: \"Current Episode\" },\n      { id: 4, label: \"Total Seasons\" },\n      { id: 5, label: \"Total Episodes\" },\n      { id: 6, label: \"Genre\" },\n      { id: 7, label: \"Delete\" },\n      { id: 8, label: \"complete\" },\n    ],\n  };\n  render() {\n    const { Movies, onDelete, onHandleEpisode } = this.props;\n    if (Movies.length === 0)\n      return (\n        <Typography> Click the button below to add your series</Typography>\n      );\n    return (\n      <div>\n        <TableContainer styles={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {this.state.columns.map((column) => (\n                  <TableCell key={column.id}>{column.label}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {Movies.map((movie) => (\n                <TableRow key={movie._id}>\n                  <TableCell>\n                    <Link\n                      to={`/movie/${movie._id}`}\n                      style={{ textDecoration: \"none\" }}\n                    >\n                      {movie.name}\n                    </Link>\n                  </TableCell>\n\n                  <TableCell>{movie.currentSeason}</TableCell>\n                  <TableCell>{movie.currentEpisode}</TableCell>\n                  <TableCell>{movie.numberOfSeasons}</TableCell>\n                  <TableCell>{movie.numberOfEpisodes}</TableCell>\n                  <TableCell>{movie.genre.name}</TableCell>\n\n                  <TableCell>\n                    <IconButton\n                      aria-label=\"delete\"\n                      onClick={() => onDelete(movie)}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => onHandleEpisode(movie)}\n                    >\n                      finish {movie.currentEpisode + 1}\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    );\n  }\n}\n","import http from \"./http\";\n\nexport function submit(data) {\n  return http.post(`/genres`, { name: data.genreName });\n}\nexport function changeData(movie, movieId) {\n  return http.put(`/movies/${movieId}`, {\n    name: movie.name,\n    currentSeason: movie.currentSeason,\n    episode: movie.currentEpisode,\n    episodesPerSeason: movie.numberOfEpisodes,\n    seasons: movie.numberOfSeasons,\n    genreId: movie.genre._id,\n  });\n}\nexport function userService(user) {\n  return http.post(`/register`, {\n    email: user.email,\n    username: user.username,\n    password: user.password,\n  });\n}\nexport function loginService(user) {\n  return http.post(`/login`, {\n    email: user.email,\n    password: user.password,\n  });\n}\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nexport default function Input({ name, value, onChange, label, type, errors }) {\n  return (\n    <div>\n      <TextField\n        type={type}\n        label={label}\n        fullWidth\n        name={name}\n        value={value}\n        onChange={onChange}\n        helperText={errors && <span>{errors}</span>}\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Input from \"./Input\";\nimport { Select } from \"@material-ui/core\";\nexport default class Form extends Component {\n  render() {\n    const { onSubmit, onChange, data, genres, errors } = this.props;\n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <Input\n            name=\"name\"\n            label=\"Title\"\n            type=\"text\"\n            value={data[\"name\"]}\n            onChange={onChange}\n            errors={errors.name}\n          />\n          <Input\n            type=\"number\"\n            name=\"currentSeason\"\n            value={data.currentSeason}\n            onChange={onChange}\n            label=\"Current Season\"\n            errors={errors.currentSeason}\n          />\n          <Input\n            type=\"number\"\n            name=\"episode\"\n            value={data.episode}\n            onChange={onChange}\n            label=\"Current Episode\"\n            errors={errors.episode}\n          />\n          <Input\n            label=\"Total Episodes\"\n            type=\"number\"\n            name=\"episodesPerSeason\"\n            value={data.episodesPerSeason}\n            onChange={onChange}\n            errors={errors.episodesPerSeason}\n          />\n          <Input\n            label=\"Total Seasons\"\n            type=\"number\"\n            name=\"seasons\"\n            value={data.seasons}\n            onChange={onChange}\n            errors={errors.seasons}\n          />\n\n          <div>\n            <Select\n              autoWidth\n              native\n              value={data.genreId}\n              onChange={onChange}\n              name=\"genreId\"\n            >\n              <option value=\"\">Select Genre</option>\n              {genres.map((genre) => (\n                <option value={genre._id} key={genre._id}>\n                  {genre.name}\n                </option>\n              ))}\n            </Select>\n          </div>\n          <div style={{ margin: \"5px\" }}>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              size=\"small\"\n              color=\"primary\"\n            >\n              Submit\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { IconButton } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Form from \"./Form\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 300,\n  },\n}));\n\nexport default function Dialogs({ onSubmit, onChange, data, genres, errors }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <AddIcon color=\"primary\" fontSize=\"large\"></AddIcon>\n      </IconButton>\n\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>Fill the form</DialogTitle>\n        <DialogContent className={classes.formControl}>\n          <Form\n            onSubmit={onSubmit}\n            onChange={onChange}\n            data={data}\n            genres={genres}\n            errors={errors}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport http from \"./http\";\nimport Tables from \"./table\";\nimport Joi from \"joi-browser\";\nimport { submit } from \"./genreService\";\nimport { changeData } from \"./genreService\";\nimport Dialogs from \"./Dialog\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\n\nconst useStyles = (theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n});\nclass Movie extends Component {\n  state = {\n    Movies: [],\n    genres: [],\n    genre: {\n      genreName: \"\",\n    },\n    data: {\n      name: \"\",\n      currentSeason: \"\",\n      episode: \"\",\n      episodesPerSeason: \"\",\n      seasons: \"\",\n      genreId: \"\",\n    },\n    errors: {},\n  };\n  schema = {\n    name: Joi.string().min(3).max(255).required().label(\"Title\"),\n    currentSeason: Joi.number()\n      .min(1)\n      .max(100)\n      .required()\n      .label(\"Current Season\"),\n    episode: Joi.number().min(1).max(100).required().label(\"Current Episode\"),\n    episodesPerSeason: Joi.number()\n      .min(1)\n      .max(100)\n      .required()\n      .label(\"Total Episodes\"),\n    seasons: Joi.number().min(1).max(100).required().label(\"Total seasons\"),\n    genreId: Joi.string().label(\"Genre\"),\n  };\n  async componentDidMount() {\n    const { data: Movies } = await http.get(\"/movies\");\n    const { data: genres } = await http.get(\"/genres\");\n    this.setState({ Movies, genres });\n  }\n  handleChange = ({ currentTarget: input }) => {\n    const genre = { ...this.state.genre };\n    const data = { ...this.state.data };\n    genre[input.name] = input.value;\n    data[input.name] = input.value;\n    this.setState({ data, genre });\n  };\n  doSubmit = async () => {\n    try {\n      const { data } = await http.post(`/movies`, this.state.data);\n      const Movies = [data, ...this.state.Movies];\n      this.setState({ Movies });\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        console.log(error.response.data);\n      }\n    }\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n  handleGenreSubmit = async () => {\n    try {\n      const { data } = await submit(this.state.genre);\n      const genres = [data, ...this.state.genres];\n      this.setState({ genres });\n    } catch (error) {}\n  };\n  handleDelete = async (movie) => {\n    try {\n      await http.delete(`/movies/${movie._id}`);\n      const Movies = this.state.Movies.filter((m) => m._id !== movie._id);\n      this.setState({ Movies });\n    } catch (error) {}\n  };\n  handleEpisode = async (movie) => {\n    const Movies = this.state.Movies;\n    const index = Movies.indexOf(movie);\n    const Movie = Movies[index];\n    Movie.currentEpisode++;\n    if (Movie.currentEpisode === Movie.numberOfSeasons) {\n      Movie.currentSeason++;\n      Movie.currentEpisode = 1;\n    }\n    await changeData(movie, movie._id);\n\n    this.setState({ Movies });\n  };\n  validate = () => {\n    const result = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false,\n    });\n    if (!result.error) return null;\n    const errors = {};\n    for (let item of result.error.details) {\n      errors[item.path[0]] = item.message;\n    }\n\n    return errors;\n  };\n  render() {\n    const { Movies, genres, data, errors } = this.state;\n    const { classes } = this.props;\n    return (\n      <Paper className={classes.paper}>\n        <Tables\n          Movies={Movies}\n          onDelete={this.handleDelete}\n          onHandleEpisode={this.handleEpisode}\n        />\n\n        <Dialogs\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          data={data}\n          genres={genres}\n          errors={errors}\n        />\n      </Paper>\n    );\n  }\n}\nexport default withStyles(useStyles)(Movie);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport http from \"./http\";\nimport Joi from \"joi-browser\";\nimport Form from \"./Form\";\nimport { Grid } from \"@material-ui/core\";\nconst useStyles = (theme) => ({\n  root: {\n    width: 300,\n  },\n  paper: {\n    padding: theme.spacing(4),\n    maxWidth: 600,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\nclass Moviedetails extends Component {\n  state = {\n    data: {\n      _id: \"\",\n      name: \"\",\n      currentSeason: \"\",\n      episode: \"\",\n      episodesPerSeason: \"\",\n      seasons: \"\",\n      genreId: \"\",\n    },\n    errors: {},\n    genres: [],\n  };\n  schema = {\n    name: Joi.string().min(3).max(255).required().label(\"Title\"),\n    currentSeason: Joi.number()\n      .min(1)\n      .max(100)\n      .required()\n      .label(\"Current Season\"),\n    episode: Joi.number().min(1).max(100).required().label(\"Current Episode\"),\n    episodesPerSeason: Joi.number()\n      .min(1)\n      .max(100)\n      .required()\n      .label(\"Total Episodes\"),\n    seasons: Joi.number().min(1).max(100).required().label(\"Total seasons\"),\n    genreId: Joi.string().label(\"Genre\"),\n  };\n\n  async componentDidMount() {\n    const { data: genres } = await http.get(\"/genres\");\n    const { data: movie } = await http.get(\n      `/movies/${this.props.match.params.id}`\n    );\n\n    this.setState({ genres, data: this.dataToModel(movie) });\n  }\n  dataToModel = (movie) => {\n    return {\n      _id: movie._id,\n      name: movie.name,\n      currentSeason: movie.currentSeason,\n      episode: movie.currentEpisode,\n      episodesPerSeason: movie.numberOfEpisodes,\n      seasons: movie.numberOfSeasons,\n      genreId: movie.genre._id,\n    };\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const genres = [...this.state.genres];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    genres[input.name] = input.value;\n    this.setState({ data, genres });\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { data: movie } = this.state;\n      const body = { ...movie };\n      delete body._id;\n      const { data } = await http.put(`/movies/${movie._id}`, body);\n      this.setState({ data });\n      this.props.history.push(\"/home\");\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        console.log(error.response.data);\n      }\n    }\n  };\n  render() {\n    const { classes } = this.props;\n    const { data, genres, errors } = this.state;\n    return (\n      <div>\n        <Grid container className={classes.paper}>\n          <Grid item>\n            <h1>Movie details of {this.state.data.name}</h1>\n            <Form\n              onSubmit={this.handleSubmit}\n              onChange={this.handleChange}\n              data={data}\n              errors={errors}\n              genres={genres}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\nexport default withStyles(useStyles)(Moviedetails);\n","import React from \"react\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { IconButton } from \"@material-ui/core\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  icons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nexport default function MyContacts() {\n  const media = [\n    {\n      id: \"1\",\n      name: \"github\",\n      link: \"https://github.com/whizcomp\",\n      icon: <GitHubIcon color=\"primary\" fontSize=\"large\" />,\n    },\n    {\n      id: \"2\",\n      name: \"linkedin\",\n      link: \"https://linkedin.com/in/victor-kipkoech-391471172\",\n      icon: <LinkedInIcon color=\"primary\" fontSize=\"large\" />,\n    },\n    {\n      id: \"3\",\n      name: \"Twitter\",\n      link: \"https://twitter.com/whizcomp\",\n      icon: <TwitterIcon color=\"primary\" fontSize=\"large\" />,\n    },\n  ];\n  const classes = useStyles();\n  return (\n    <div className={classes.icons}>\n      <IconButton>\n        {media.map((media) => (\n          <li\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"15px\",\n            }}\n          >\n            <a rel=\"noopener noreferrer\" href={media.link} target=\"_blank\">\n              {media.icon}\n            </a>\n          </li>\n        ))}\n      </IconButton>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Paper, Grid, Typography, Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Input from \"./Input\";\nimport { userService } from \"./genreService\";\nimport Joi from \"joi-browser\";\nimport MyContacts from \"./MyContacts\";\nconst useStyles = (theme) => ({\n  form: {\n    paddingLeft: \"15px\",\n  },\n  paper: {\n    minHeight: \"350px\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n  },\n});\nclass Register extends Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n    },\n    errors: {},\n  };\n  schema = {\n    email: Joi.string().min(3).max(255).required().email(),\n    password: Joi.string().min(6).max(255).required(),\n    username: Joi.string().min(3).max(55).required(),\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n  validate = () => {\n    const { error } = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false,\n    });\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) {\n      errors[item.path[0]] = item.message;\n    }\n    return errors;\n  };\n  doSubmit = async () => {\n    try {\n      const { data } = await userService(this.state.data);\n      localStorage.setItem(\"token\", data);\n      window.location = \"/home\";\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        const errors = { ...this.state.data };\n        errors.email = error.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n  render() {\n    const { errors, data } = this.state;\n    const { classes } = this.props;\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid item xs={12} md={12} lg={8} className={classes.form}>\n              <form onSubmit={this.handleSubmit}>\n                <Typography variant=\"h4\"> Register</Typography>\n                <Input\n                  label=\"Email\"\n                  name=\"email\"\n                  value={data.email}\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  errors={errors.email}\n                />\n                <Input\n                  label=\"Username\"\n                  name=\"username\"\n                  value={data.username}\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  errors={errors.username}\n                />\n                <Input\n                  label=\"Password\"\n                  name=\"password\"\n                  value={data.password}\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  errors={errors.password}\n                />\n                <div>\n                  <Button\n                    className={classes.button}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Register\n                  </Button>\n                </div>\n              </form>\n            </Grid>\n            <Grid item xs={12} md={12} lg={4}>\n              <MyContacts />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\nexport default withStyles(useStyles)(Register);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Paper, Grid, Typography } from \"@material-ui/core\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Joi from \"joi-browser\";\nimport Input from \"./Input\";\nimport { loginService } from \"./genreService\";\nimport { Redirect } from \"react-router-dom\";\nimport MyContacts from \"./MyContacts\";\nconst useStyles = (theme) => ({\n  paper: {\n    minHeight: \"350px\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n  },\n});\nclass Login extends Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\",\n    },\n    errors: {},\n  };\n  schema = {\n    email: Joi.string().min(3).max(255).required().email(),\n    password: Joi.string().min(6).max(255).required(),\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n  validate = () => {\n    const { error } = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false,\n    });\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) {\n      errors[item.path[0]] = item.message;\n    }\n    return errors;\n  };\n  doSubmit = async () => {\n    try {\n      const { data } = await loginService(this.state.data);\n      localStorage.setItem(\"token\", data);\n      window.location = \"/home\";\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.email = error.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n  render() {\n    const { errors, data } = this.state;\n    const { user, classes } = this.props;\n    if (user) return <Redirect to=\"/home\" />;\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid item xs={12} sm={12} md={3} lg={3}>\n              <Typography style={{ marginTop: \"25px\" }}>\n                <Typography variant=\"h4\">How it works</Typography>\n                <ol variant=\"p\">\n                  <li>\n                    <i>sign up or log in</i>\n                  </li>\n                  <li>\n                    <i> Enter the new series</i>\n                  </li>\n                  <li>\n                    <i> You can now manage your series lol :D </i>\n                  </li>\n                </ol>\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6} lg={6}>\n              <form onSubmit={this.handleSubmit}>\n                <Typography variant=\"h4\"> Login</Typography>\n                <Input\n                  label=\"Email\"\n                  name=\"email\"\n                  value={data.email}\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  errors={errors.email}\n                />\n\n                <Input\n                  label=\"Password\"\n                  name=\"password\"\n                  value={data.password}\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  errors={errors.password}\n                />\n                <div>\n                  <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    type=\"submit\"\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    login\n                  </Button>\n                </div>\n              </form>\n            </Grid>\n            <Grid item xs={12} sm={12} md={3} lg={3}>\n              <MyContacts />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\nexport default withStyles(useStyles)(Login);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, MenuItem, Box, Typography } from \"@material-ui/core\";\nimport { Switch, Link } from \"react-router-dom\";\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  links: {\n    padding: theme.spacing(1),\n    color: \"white\",\n    textDecoration: \"none\",\n  },\n  align: {\n    display: \"flex\",\n    flexFlow: \"row\",\n    alignContent: \"flex-end\",\n  },\n});\nclass Navbar extends Component {\n  render() {\n    const { classes, user } = this.props;\n    return (\n      <Box className={classes.root}>\n        <Switch>\n          <React.Fragment>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <Typography style={{ flex: 1 }}>\n                  <Link to=\"/home\" className={classes.links}>\n                    Whiz Comp\n                  </Link>\n                </Typography>\n                {!user && (\n                  <div className={classes.align}>\n                    <MenuItem>\n                      <Link to=\"/register\" className={classes.links}>\n                        Register\n                      </Link>\n                    </MenuItem>\n                    <MenuItem>\n                      <Link to=\"/login\" className={classes.links}>\n                        Login\n                      </Link>\n                    </MenuItem>\n                  </div>\n                )}\n                {user && (\n                  <React.Fragment>\n                    <Link to=\"/logout\" className={classes.links}>\n                      Logout\n                    </Link>\n                    <Link to=\"/profile\" className={classes.links}>\n                      {\" \"}\n                      {user.username}\n                    </Link>\n                  </React.Fragment>\n                )}\n              </Toolbar>\n            </AppBar>\n          </React.Fragment>\n        </Switch>\n      </Box>\n    );\n  }\n}\nexport default withStyles(useStyles)(Navbar);\n","import React, { Component } from \"react\";\n\nexport default class Logout extends Component {\n  componentDidMount() {\n    localStorage.removeItem(\"token\");\n    window.location = \"/login\";\n  }\n  render() {\n    return (\n      <div>\n        <h1>loging out</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Movie from \"./component/Movie\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Moviedetails from \"./component/movieDetails\";\nimport Register from \"./component/register\";\nimport Login from \"./component/login\";\nimport Navbar from \"./component/Navbar\";\nimport jwt from \"jwt-decode\";\nimport Logout from \"./component/logout\";\nexport default class App extends Component {\n  state = {};\n  componentDidMount() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const user = jwt(token);\n      this.setState({ user });\n    } catch (error) {}\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <div>\n        <Navbar user={this.state.user} />\n        <Route path=\"/register\" component={Register} />\n        <Route\n          path=\"/login\"\n          render={(props) => <Login {...props} user={user} />}\n        />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/movie/:id\" component={Moviedetails} />\n        <Route\n          path=\"/home\"\n          exact\n          render={(props) => {\n            if (!user) return <Redirect to=\"/login\" />;\n            return <Movie {...props} />;\n          }}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}